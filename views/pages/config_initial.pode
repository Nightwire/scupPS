<!-- ############################################### Code ################################################# -->

<!-- jQuery -->
<script src="assets/jquery/jquery.min.js"></script>
<script src="assets/jquery-steps/jquery.steps.min.js"></script>
<script src="assets/jquery-validation/jquery.validate.min.js"></script>
<style>
/* Style the form */
#regForm {
  background-color: #ffffff;
  margin: 100px auto;
  padding: 40px;
  width: 70%;
  min-width: 300px;
}

/* Style the input fields */
input {
  padding: 10px;
  width: 100%;
  font-size: 17px;
  font-family: Raleway;
  border: 1px solid #aaaaaa;
}

/* Mark input boxes that gets an error on validation: */
input.invalid {
  background-color: #ffdddd;
}

/* Hide all steps by default: */
.tab {
  display: none;
}

/* Make circles that indicate the steps of the form: */
.step {
  height: 15px;
  width: 15px;
  margin: 0 2px;
  background-color: #bbbbbb;
  border: none;
  border-radius: 50%;
  display: inline-block;
  opacity: 0.5;
}

/* Mark the active step: */
.step.active {
  opacity: 1;
}

/* Mark the steps that are finished and valid: */
.step.finish {
  background-color: #4CAF50;
}
</style>

<script type="text/javascript">

    var url = '/api';
    var currentTab = 0; // Current tab is set to be the first tab (0)
    showTab(currentTab); // Display the current tab

    var HttpClient = function() {
    this.get = function(aUrl, aCallback) {
            var anHttpRequest = new XMLHttpRequest();
            anHttpRequest.onreadystatechange = function() { 
                if (anHttpRequest.readyState == 4 && anHttpRequest.status == 200)
                    aCallback(anHttpRequest.responseText);
            }
            
            requesttype = "GET";
            
            anHttpRequest.open( requesttype, aUrl, true );            
            anHttpRequest.send( null );
        }
    }
    

    function showTab(n) {
        // This function will display the specified tab of the form ...
        var x = document.getElementsByClassName("tab");
        
        x[n].style.display = "block";
        // ... and fix the Previous/Next buttons:
        if (n == 0) {
            document.getElementById("prevBtn").style.display = "none";
        } else {
            document.getElementById("prevBtn").style.display = "inline";
        }
        if (n == (x.length - 1)) {
            document.getElementById("nextBtn").innerHTML = "Submit";
        } else {
            document.getElementById("nextBtn").innerHTML = "Next";
        }
        // ... and run a function that displays the correct step indicator:
        fixStepIndicator(n);

    }

    function nextPrev(n) {
        // This function will figure out which tab to display
        var x = document.getElementsByClassName("tab");      
        // Exit the function if any field in the current tab is invalid:
        if (n == 1 && !validateForm()) return false;
        // Hide the current tab:
        x[currentTab].style.display = "none";
        // Increase or decrease the current tab by 1:
        currentTab = currentTab + n;
        // if you have reached the end of the form... :
        if (currentTab >= x.length) {
          //...the form gets submitted:
          document.getElementById("regForm").submit();
          return false;
        }
        // Otherwise, display the correct tab:
        showTab(currentTab);
        y = x[currentTab].getElementsByTagName("input");
        // A loop that checks every input field in the current tab:
        for (i = 0; i < y.length; i++) {
            verify(y[i].id);
        }
    }

    function verify(fieldName){
        var value = document.getElementById(fieldName).value;
        var suburl = (url + '?operation=setup&fieldName=' + encodeURIComponent(fieldName) + '&fieldValue=' + encodeURIComponent(value));       
        var client = new HttpClient();
                        
        client.get( suburl, function(response) {
                if(!response || !response.includes("True")){      
                    console.log("Value " + fieldName + " is not yet ready, response from Api is: '" + response + "'");
                    document.getElementById(fieldName).ready = false;
                }else{
                    console.log("Value " + fieldName + " is ready, response from Api is: '" + response + "'");
                    document.getElementById(fieldName).ready = true;
                }           
        });
    }
    
    function validateForm() {
        // This function deals with validation of the form fields
        var x, y, i, valid = true;
        x = document.getElementsByClassName("tab");
        y = x[currentTab].getElementsByTagName("input");
        // A loop that checks every input field in the current tab:
        for (i = 0; i < y.length; i++) {
          // If a field is empty...          
          if (y[i].ready != true) {
            // add an "invalid" class to the field:
            y[i].className += " invalid";
            // and set the current valid status to false:
            valid = false;
          }
        }
        // If the valid status is true, mark the step as finished and valid:
        if (valid) {
          document.getElementsByClassName("step")[currentTab].className += " finish";
        }
        return valid; // return the valid status
    }
      

    function fixStepIndicator(n) {
    // This function removes the "active" class of all steps...
    var i, x = document.getElementsByClassName("step");
    for (i = 0; i < x.length; i++) {
        x[i].className = x[i].className.replace(" active", "");
    }
    //... and adds the "active" class to the current step:
    x[n].className += " active";
    }
</script>

$(
if(
    (Get-ServerReadyness) -eq $false
){
    #Build Fields
    @"
    <!-- Form Name -->
    <legend>Initial Setup</legend>
    <form id="regForm" action="">    
    <!-- One "tab" for each step in the form: -->
    $(
        $tabs = @()
        0,1,2,3 | ForEach-Object {
            $tabs += $_
            $num = $_
            "<div class=`"tab`">$($_.Value.Description)</td>"
            (Get-scupPSDefaultValues).GetEnumerator() | Where-Object { $_.Value.Type -eq $num } | ForEach-Object {
                $val = Get-scupPSValue -Name $_.Name
                $val = [System.Net.WebUtility]::HtmlEncode($val)
                "
                    <p>$($_.Value.Description):<input id=`"$($_.Name)`" value=`"$($val)`"oninput=`"this.className = ''`"></p>
                    <script type=`"text/javascript`">
                        `$(`"#$($_.Name)`").keyup(function(){
                            verify(`"$($_.Name)`");
                        });
                    </script>
                "
            }
            "</div>"
        }
    )
    
    <div style="overflow:auto;">
      <div style="float:right;">
        <button type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
        <button type="button" id="nextBtn" onclick="nextPrev(1)">Next</button>
      </div>
    </div>
    
    <script type=`"text/javascript`">
        var x = document.getElementsByClassName("tab");        
        y = x[currentTab].getElementsByTagName("input");
        // A loop that checks every input field in the current tab:
        for (i = 0; i < y.length; i++) {
            verify(y[i].id);
        }
    </script>
    <!-- Circles which indicates the steps of the form: -->
    <div style="text-align:center;margin-top:40px;">
        $( $tabs.GetEnumerator() | ForEach-Object {
            "<span class=`"step`"></span>"
        })
    </div>
    </form>
"@
}else{
    "You don't have access to this page"
}
)
<!-- ############################################### End ################################################## -->