#pragma namespace ("\\\\.\\root\\cimv2")
instance of __Namespace
{
    Name = "SMS" ;
};
#pragma namespace ("\\\\.\\root\\cimv2\\SMS")
instance of __Namespace
{
    Name = "INV_TEMP" ;
};
#pragma namespace ("\\\\.\\root\\cimv2\\SMS\\INV_TEMP")

//=============================================================================
// SMS_Class_Template must be the parent of every class
//=============================================================================
class SMS_Class_Template
{
};

// Class Qualifiers:
//          SMS_Report:     OPTIONAL -- Boolean value (TRUE, FALSE)
//                          indicating whether or not the class is
//                          to be reported in SMS inventory. Default
//                          is FALSE.
//          SMS_Group_Name: OPTIONAL -- The name of the property
//                          group to be used in the output MIF.
//                          Default is the WBEM class name as it
//                          appears in this MOF.
//          SMS_Class_ID:   REQUIRED -- The SMS class identifier
//                          string associated with the property group.
//          SMS_Namespace:  OPTIONAL -- Boolean value (TRUE, FALSE)
//                          indicating whether the provider for this class
//                          is located in the SMS namespace. This is TRUE
//                          for any class supplied by the SMS CimV2 Provider.
//          Namespace:      OPTIONAL -- The namespace where this class
//                          is located. Default is the root\cimv2 namespace.
//                          Every '\' should be entered as '\\\\'.
//                          As an example:
//                              root\default
//                          should be entered as:
//                              Namespace ("root\\\\default")
//
// Property Qualifiers:
//          SMS_Report:     OPTIONAL -- Boolean value (TRUE, FALSE)
//                          indicating whether or not the property
//                          is to be included in SMS inventory.
//                          Default is FALSE. For key properties,
//                          this qualifier is ignored; keys will
//                          always be reported.
//          SMS_Units:      OPTIONAL -- This string informs the
//                          Inventory Agent to perform a conversion
//                          between data provided by WMI into a form
//                          SMS can handle. Example: SMS can't handle
//                          64-bit integers, so in the case of disk
//                          size, we use the qualifier:
//                          SMS_Units("Megabytes") and the agent will
//                          translate the raw # of bytes returned by
//                          WBEM into the appropriate representation
//                          in megabytes.
//
//                          Another example is using the DateString
//                          qualifier for WMI date-time intervals
//                          (aka: ddddddddHHMMSS.mmmmmm:000).  SMS
//                          requires the DateString qualifier to
//                          convert / use WMI time-intervals.
//
//                          Values:
//                           Kilobytes, divides integer value by 1024
//                           Megabytes, divides int value by (1024 * 1024)
//                           GigaBytes, divides int value by (1024 * 1024 * 1024)
//                           HexString, converts int value to hex characters,
//                             (ie:  hex value 0A1 converted to string "0xA1")
//                           DecimalString, converts int value to decimal string
//                             (ie:  value 123 converted to string "123")
//                           Seconds, divides int value by 1000
//                           DateString, converts value to interval string
//                             (ie: DateTime value "00000008061924.000000:000"
//                              turns into string "8 Days 08:15:55 Hours")
//          SMS_Width:      OPTIONAL -- Integer indicating whether the length 
//                          of the string property is the default of 255
//                          or longer as specified in the value.
//

[ SMS_Report (TRUE),
  SMS_Group_Name ("Computer System"),
  SMS_Class_ID ("MICROSOFT|COMPUTER_SYSTEM|1.0"),
  Namespace ("\\\\\\\\.\\\\root\\\\cimv2") ]
class Win32_ComputerSystem : SMS_Class_Template
{
    [ SMS_Report (TRUE), key ]
    String     Name;
    [ SMS_Report (FALSE) ]
    UInt16     AdminPasswordStatus;
    [ SMS_Report (FALSE) ]
    Boolean     AutomaticResetBootOption;
    [ SMS_Report (FALSE) ]
    Boolean     AutomaticResetCapability;
    [ SMS_Report (FALSE) ]
    UInt16     BootOptionOnLimit;
    [ SMS_Report (FALSE) ]
    UInt16     BootOptionOnWatchDog;
    [ SMS_Report (FALSE) ]
    Boolean     BootROMSupported;
    [ SMS_Report (FALSE) ]
    String     BootupState;
    [ SMS_Report (FALSE) ]
    String     Caption;
    [ SMS_Report (FALSE) ]
    UInt16     ChassisBootupState;
    [ SMS_Report (TRUE) ]
    SInt16     CurrentTimeZone;
    [ SMS_Report (FALSE) ]
    Boolean     DaylightInEffect;
    [ SMS_Report (TRUE) ]
    String     Description;
    [ SMS_Report (TRUE) ]
    String     Domain;
    [ SMS_Report (TRUE) ]
    UInt16     DomainRole;
    [ SMS_Report (FALSE) ]
    UInt16     FrontPanelResetStatus;
    [ SMS_Report (FALSE) ]
    Boolean     InfraredSupported;
    [ SMS_Report (FALSE) ]
    String     InitialLoadInfo[];
    [ SMS_Report (FALSE) ]
    DateTime     InstallDate;
    [ SMS_Report (FALSE) ]
    UInt16     KeyboardPasswordStatus;
    [ SMS_Report (FALSE) ]
    String     LastLoadInfo;
    [ SMS_Report (TRUE) ]
    String     Manufacturer;
    [ SMS_Report (TRUE) ]
    String     Model;
    [ SMS_Report (FALSE) ]
    String     NameFormat;
    [ SMS_Report (FALSE) ]
    Boolean     NetworkServerModeEnabled;
    [ SMS_Report (TRUE) ]
    UInt32     NumberOfProcessors;
    [ SMS_Report (FALSE) ]
    String     OEMLogoBitmap;
    [ SMS_Report (FALSE) ]
    String     OEMStringArray[];
    [ SMS_Report (FALSE), SMS_Units ("DecimalString") ]
    SInt64     PauseAfterReset;
    [ SMS_Report (FALSE) ]
    UInt16     PowerManagementCapabilities[];
    [ SMS_Report (FALSE) ]
    Boolean     PowerManagementSupported;
    [ SMS_Report (FALSE) ]
    UInt16     PowerOnPasswordStatus;
    [ SMS_Report (FALSE) ]
    UInt16     PowerState;
    [ SMS_Report (FALSE) ]
    UInt16     PowerSupplyState;
    [ SMS_Report (FALSE) ]
    String     PrimaryOwnerContact;
    [ SMS_Report (FALSE) ]
    String     PrimaryOwnerName;
    [ SMS_Report (FALSE) ]
    UInt16     ResetCapability;
    [ SMS_Report (FALSE) ]
    SInt16     ResetCount;
    [ SMS_Report (FALSE) ]
    SInt16     ResetLimit;
    [ SMS_Report (TRUE) ]
    String     Roles[];
    [ SMS_Report (TRUE) ]
    String     Status;
    [ SMS_Report (FALSE) ]
    String     SupportContactDescription[];
    [ SMS_Report (FALSE) ]
    UInt16     SystemStartupDelay;
    [ SMS_Report (FALSE) ]
    String     SystemStartupOptions[];
    [ SMS_Report (FALSE) ]
    UInt8     SystemStartupSetting;
    [ SMS_Report (TRUE) ]
    String     SystemType;
    [ SMS_Report (FALSE) ]
    UInt16     ThermalState;
    [ SMS_Report (TRUE), SMS_Units ("KiloBytes") ]
    UInt64     TotalPhysicalMemory;
    [ SMS_Report (TRUE) ]
    String     UserName;
    [ SMS_Report (FALSE) ]
    UInt16     WakeUpType;
};

[ SMS_Report (TRUE),
  SMS_Group_Name ("Computer System Product"),
  SMS_Class_ID ("MICROSOFT|COMPUTER_SYSTEM_PRODUCT|1.0"),
  Namespace ("\\\\\\\\.\\\\root\\\\cimv2") ]
class Win32_ComputerSystemProduct : SMS_Class_Template
{
    [ SMS_Report (TRUE), key ]
    String     IdentifyingNumber;
    [ SMS_Report (TRUE), key ]
    String     Name;
    [ SMS_Report (TRUE), key ]
    String     Version;
    [ SMS_Report (FALSE) ]
    String     Caption;
    [ SMS_Report (FALSE) ]
    String     Description;
    [ SMS_Report (FALSE) ]
    String     SKUNumber;
    [ SMS_Report (FALSE) ]
    String     UUID;
    [ SMS_Report (FALSE) ]
    String     Vendor;
};

[ SMS_Report (TRUE),
  SMS_Group_Name ("Disk"),
  SMS_Class_ID ("MICROSOFT|DISK|1.0"),
  Namespace ("\\\\\\\\.\\\\root\\\\cimv2") ]
class Win32_DiskDrive : SMS_Class_Template
{
    [ SMS_Report (TRUE), key ]
    String     DeviceID;
    [ SMS_Report (TRUE) ]
    UInt16     Availability;
    [ SMS_Report (TRUE) ]
    UInt32     BytesPerSector;
    [ SMS_Report (TRUE) ]
    UInt16     Capabilities[];
    [ SMS_Report (TRUE) ]
    String     CapabilityDescriptions[];
    [ SMS_Report (TRUE) ]
    String     Caption;
    [ SMS_Report (TRUE) ]
    String     CompressionMethod;
    [ SMS_Report (TRUE) ]
    UInt32     ConfigManagerErrorCode;
    [ SMS_Report (TRUE) ]
    Boolean     ConfigManagerUserConfig;
    [ SMS_Report (TRUE), SMS_Units ("KiloBytes") ]
    UInt64     DefaultBlockSize;
    [ SMS_Report (TRUE) ]
    String     Description;
    [ SMS_Report (TRUE) ]
    Boolean     ErrorCleared;
    [ SMS_Report (TRUE) ]
    String     ErrorDescription;
    [ SMS_Report (TRUE) ]
    String     ErrorMethodology;
    [ SMS_Report (TRUE) ]
    UInt32     Index;
    [ SMS_Report (TRUE) ]
    DateTime     InstallDate;
    [ SMS_Report (TRUE) ]
    String     InterfaceType;
    [ SMS_Report (TRUE) ]
    UInt32     LastErrorCode;
    [ SMS_Report (TRUE) ]
    String     Manufacturer;
    [ SMS_Report (TRUE), SMS_Units ("KiloBytes") ]
    UInt64     MaxBlockSize;
    [ SMS_Report (TRUE), SMS_Units ("MegaBytes") ]
    UInt64     MaxMediaSize;
    [ SMS_Report (TRUE) ]
    Boolean     MediaLoaded;
    [ SMS_Report (TRUE) ]
    String     MediaType;
    [ SMS_Report (TRUE), SMS_Units ("KiloBytes") ]
    UInt64     MinBlockSize;
    [ SMS_Report (TRUE) ]
    String     Model;
    [ SMS_Report (TRUE) ]
    String     Name;
    [ SMS_Report (TRUE) ]
    Boolean     NeedsCleaning;
    [ SMS_Report (TRUE) ]
    UInt32     NumberOfMediaSupported;
    [ SMS_Report (TRUE) ]
    UInt32     Partitions;
    [ SMS_Report (TRUE) ]
    String     PNPDeviceID;
    [ SMS_Report (TRUE) ]
    UInt16     PowerManagementCapabilities[];
    [ SMS_Report (TRUE) ]
    Boolean     PowerManagementSupported;
    [ SMS_Report (TRUE) ]
    UInt32     SCSIBus;
    [ SMS_Report (TRUE) ]
    UInt16     SCSILogicalUnit;
    [ SMS_Report (TRUE) ]
    UInt16     SCSIPort;
    [ SMS_Report (TRUE) ]
    UInt16     SCSITargetId;
    [ SMS_Report (TRUE) ]
    UInt32     SectorsPerTrack;
    [ SMS_Report (TRUE), SMS_Units ("Megabytes") ]
    UInt64     Size;
    [ SMS_Report (TRUE) ]
    String     Status;
    [ SMS_Report (TRUE) ]
    UInt16     StatusInfo;
    [ SMS_Report (TRUE) ]
    String     SystemName;
    [ SMS_Report (TRUE), SMS_Units ("DecimalString") ]
    UInt64     TotalCylinders;
    [ SMS_Report (TRUE) ]
    UInt32     TotalHeads;
    [ SMS_Report (TRUE), SMS_Units ("DecimalString") ]
    UInt64     TotalSectors;
    [ SMS_Report (TRUE), SMS_Units ("DecimalString") ]
    UInt64     TotalTracks;
    [ SMS_Report (TRUE) ]
    UInt32     TracksPerCylinder;
};

[ SMS_Report (TRUE),
  SMS_Group_Name ("Partition"),
  SMS_Class_ID ("MICROSOFT|PARTITION|1.0"),
  Namespace ("\\\\\\\\.\\\\root\\\\cimv2") ]
class Win32_DiskPartition : SMS_Class_Template
{
    [ SMS_Report (TRUE), key ]
    String     DeviceID;
    [ SMS_Report (TRUE) ]
    UInt16     Access;
    [ SMS_Report (TRUE) ]
    UInt16     Availability;
    [ SMS_Report (TRUE), SMS_Units ("KiloBytes") ]
    UInt64     BlockSize;
    [ SMS_Report (TRUE) ]
    Boolean     Bootable;
    [ SMS_Report (TRUE) ]
    Boolean     BootPartition;
    [ SMS_Report (TRUE) ]
    String     Caption;
    [ SMS_Report (TRUE) ]
    UInt32     ConfigManagerErrorCode;
    [ SMS_Report (TRUE) ]
    Boolean     ConfigManagerUserConfig;
    [ SMS_Report (TRUE) ]
    String     Description;
    [ SMS_Report (TRUE) ]
    UInt32     DiskIndex;
    [ SMS_Report (TRUE) ]
    Boolean     ErrorCleared;
    [ SMS_Report (TRUE) ]
    String     ErrorDescription;
    [ SMS_Report (TRUE) ]
    String     ErrorMethodology;
    [ SMS_Report (TRUE) ]
    UInt32     HiddenSectors;
    [ SMS_Report (TRUE) ]
    UInt32     Index;
    [ SMS_Report (TRUE) ]
    DateTime     InstallDate;
    [ SMS_Report (TRUE) ]
    UInt32     LastErrorCode;
    [ SMS_Report (TRUE) ]
    String     Name;
    [ SMS_Report (TRUE), SMS_Units ("DecimalString") ]
    UInt64     NumberOfBlocks;
    [ SMS_Report (TRUE) ]
    String     PNPDeviceID;
    [ SMS_Report (TRUE) ]
    UInt16     PowerManagementCapabilities[];
    [ SMS_Report (TRUE) ]
    Boolean     PowerManagementSupported;
    [ SMS_Report (TRUE) ]
    Boolean     PrimaryPartition;
    [ SMS_Report (TRUE) ]
    String     Purpose;
    [ SMS_Report (TRUE) ]
    Boolean     RewritePartition;
    [ SMS_Report (TRUE), SMS_Units ("Megabytes") ]
    UInt64     Size;
    [ SMS_Report (TRUE), SMS_Units ("Megabytes") ]
    UInt64     StartingOffset;
    [ SMS_Report (TRUE) ]
    String     Status;
    [ SMS_Report (TRUE) ]
    UInt16     StatusInfo;
    [ SMS_Report (TRUE) ]
    String     SystemName;
    [ SMS_Report (TRUE) ]
    String     Type;
};

[ SMS_Report (TRUE),
  SMS_Group_Name ("USM Folder Redirection Health"),
  SMS_Class_ID ("MICROSOFT|FOLDER_REDIRECTION_HEALTH|1.0"),
  Namespace ("\\\\\\\\.\\\\root\\\\cimv2\\\\sms") ]
class SMS_FolderRedirectionHealth : SMS_Class_Template
{
    [ SMS_Report (TRUE), key ]
    String     FolderName;
    [ SMS_Report (TRUE), key ]
    String     SID;
    [ SMS_Report (TRUE) ]
    UInt8     HealthStatus;
    [ SMS_Report (FALSE) ]
    DateTime     LastSuccessfulSyncTime;
    [ SMS_Report (FALSE) ]
    UInt8     LastSyncStatus;
    [ SMS_Report (FALSE) ]
    DateTime     LastSyncTime;
    [ SMS_Report (TRUE) ]
    Boolean     OfflineAccessEnabled;
    [ SMS_Report (FALSE) ]
    String     OfflineFileNameFolderGUID;
    [ SMS_Report (TRUE) ]
    Boolean     Redirected;
};

[ SMS_Report (TRUE),
  SMS_Group_Name ("Installed Software"),
  SMS_Class_ID ("MICROSOFT|INSTALLED_SOFTWARE|1.0"),
  Namespace ("\\\\\\\\.\\\\root\\\\cimv2\\\\sms") ]
class SMS_InstalledSoftware : SMS_Class_Template
{
    [ SMS_Report (TRUE), key ]
    String     SoftwareCode;
    [ SMS_Report (TRUE) ]
    String     ARPDisplayName;
    [ SMS_Report (TRUE) ]
    String     ChannelCode;
    [ SMS_Report (TRUE) ]
    String     ChannelID;
    [ SMS_Report (TRUE) ]
    String     CM_DSLID;
    [ SMS_Report (TRUE) ]
    String     EvidenceSource;
    [ SMS_Report (TRUE) ]
    DateTime     InstallDate;
    [ SMS_Report (TRUE) ]
    UInt32     InstallDirectoryValidation;
    [ SMS_Report (TRUE) ]
    String     InstalledLocation;
    [ SMS_Report (TRUE) ]
    String     InstallSource;
    [ SMS_Report (TRUE) ]
    UInt32     InstallType;
    [ SMS_Report (TRUE) ]
    UInt32     Language;
    [ SMS_Report (TRUE) ]
    String     LocalPackage;
    [ SMS_Report (TRUE) ]
    String     MPC;
    [ SMS_Report (TRUE) ]
    UInt32     OsComponent;
    [ SMS_Report (TRUE) ]
    String     PackageCode;
    [ SMS_Report (TRUE) ]
    String     ProductID;
    [ SMS_Report (TRUE) ]
    String     ProductName;
    [ SMS_Report (TRUE) ]
    String     ProductVersion;
    [ SMS_Report (TRUE) ]
    String     Publisher;
    [ SMS_Report (TRUE) ]
    String     RegisteredUser;
    [ SMS_Report (TRUE) ]
    String     ServicePack;
    [ SMS_Report (TRUE) ]
    String     SoftwarePropertiesHash;
    [ SMS_Report (TRUE) ]
    String     SoftwarePropertiesHashEx;
    [ SMS_Report (TRUE) ]
    String     UninstallString;
    [ SMS_Report (TRUE) ]
    String     UpgradeCode;
    [ SMS_Report (TRUE) ]
    UInt32     VersionMajor;
    [ SMS_Report (TRUE) ]
    UInt32     VersionMinor;
};

[ SMS_Report (TRUE),
  SMS_Group_Name ("Quick Fix Engineering"),
  SMS_Class_ID ("MICROSOFT|QUICK_FIX_ENGINEERING|1.0"),
  Namespace ("\\\\\\\\.\\\\root\\\\cimv2") ]
class Win32_QuickFixEngineering : SMS_Class_Template
{
    [ SMS_Report (TRUE), key ]
    String     HotFixID;
    [ SMS_Report (TRUE), key ]
    String     ServicePackInEffect;
    [ SMS_Report (TRUE) ]
    String     Caption;
    [ SMS_Report (TRUE) ]
    String     Description;
    [ SMS_Report (TRUE) ]
    String     FixComments;
    [ SMS_Report (TRUE) ]
    DateTime     InstallDate;
    [ SMS_Report (TRUE) ]
    String     InstalledBy;
    [ SMS_Report (TRUE) ]
    String     InstalledOn;
    [ SMS_Report (TRUE) ]
    String     Name;
    [ SMS_Report (TRUE) ]
    String     Status;
};

[ SMS_Report (TRUE),
  SMS_Group_Name ("System Enclosure"),
  SMS_Class_ID ("MICROSOFT|SYSTEM_ENCLOSURE|1.0"),
  Namespace ("\\\\\\\\.\\\\root\\\\cimv2") ]
class Win32_SystemEnclosure : SMS_Class_Template
{
    [ SMS_Report (TRUE), key ]
    String     Tag;
    [ SMS_Report (TRUE) ]
    Boolean     AudibleAlarm;
    [ SMS_Report (TRUE) ]
    String     BreachDescription;
    [ SMS_Report (TRUE) ]
    String     CableManagementStrategy;
    [ SMS_Report (TRUE) ]
    String     Caption;
    [ SMS_Report (TRUE) ]
    UInt16     ChassisTypes[];
    [ SMS_Report (TRUE) ]
    SInt16     CurrentRequiredOrProduced;
    [ SMS_Report (TRUE) ]
    String     Description;
    [ SMS_Report (TRUE) ]
    UInt16     HeatGeneration;
    [ SMS_Report (TRUE) ]
    Boolean     HotSwappable;
    [ SMS_Report (TRUE) ]
    DateTime     InstallDate;
    [ SMS_Report (TRUE) ]
    Boolean     LockPresent;
    [ SMS_Report (TRUE) ]
    String     Manufacturer;
    [ SMS_Report (TRUE) ]
    String     Model;
    [ SMS_Report (TRUE) ]
    String     Name;
    [ SMS_Report (TRUE) ]
    UInt16     NumberOfPowerCords;
    [ SMS_Report (TRUE) ]
    String     OtherIdentifyingInfo;
    [ SMS_Report (TRUE) ]
    String     PartNumber;
    [ SMS_Report (TRUE) ]
    Boolean     PoweredOn;
    [ SMS_Report (TRUE) ]
    Boolean     Removable;
    [ SMS_Report (TRUE) ]
    Boolean     Replaceable;
    [ SMS_Report (TRUE) ]
    UInt16     SecurityBreach;
    [ SMS_Report (TRUE) ]
    UInt16     SecurityStatus;
    [ SMS_Report (TRUE) ]
    String     SerialNumber;
    [ SMS_Report (TRUE) ]
    String     ServiceDescriptions[];
    [ SMS_Report (TRUE) ]
    UInt16     ServicePhilosophy[];
    [ SMS_Report (TRUE) ]
    String     SKU;
    [ SMS_Report (TRUE) ]
    String     SMBIOSAssetTag;
    [ SMS_Report (TRUE) ]
    String     Status;
    [ SMS_Report (TRUE) ]
    String     TypeDescriptions[];
    [ SMS_Report (TRUE) ]
    String     Version;
    [ SMS_Report (TRUE) ]
    Boolean     VisibleAlarm;
};

[ SMS_Report (TRUE),
  SMS_Group_Name ("USM User Profile"),
  SMS_Class_ID ("MICROSOFT|USER_PROFILE|1.0"),
  Namespace ("\\\\\\\\.\\\\root\\\\cimv2") ]
class Win32_UserProfile : SMS_Class_Template
{
    [ SMS_Report (TRUE), key ]
    String     SID;
    [ SMS_Report (TRUE) ]
    UInt8     HealthStatus;
    [ SMS_Report (FALSE) ]
    String     LastAttemptedProfileDownloadTime;
    [ SMS_Report (FALSE) ]
    String     LastAttemptedProfileUploadTime;
    [ SMS_Report (FALSE) ]
    String     LastBackgroundRegistryUploadTime;
    [ SMS_Report (FALSE) ]
    DateTime     LastDownloadTime;
    [ SMS_Report (FALSE) ]
    DateTime     LastUploadTime;
    [ SMS_Report (FALSE) ]
    DateTime     LastUseTime;
    [ SMS_Report (FALSE) ]
    Boolean     Loaded;
    [ SMS_Report (TRUE) ]
    String     LocalPath;
    [ SMS_Report (FALSE) ]
    UInt32     RefCount;
    [ SMS_Report (TRUE) ]
    Boolean     RoamingConfigured;
    [ SMS_Report (TRUE) ]
    String     RoamingPath;
    [ SMS_Report (TRUE) ]
    Boolean     RoamingPreference;
    [ SMS_Report (TRUE) ]
    Boolean     Special;
    [ SMS_Report (TRUE) ]
    UInt32     Status;
};

[ SMS_Report (TRUE),
  SMS_Group_Name ("Windows Update"),
  SMS_Class_ID ("MICROSOFT|WINDOWSUPDATE|1.0"),
  Namespace ("\\\\\\\\.\\\\root\\\\cimv2") ]
class Win32Reg_SMSWindowsUpdate : SMS_Class_Template
{
    [ SMS_Report (TRUE), key ]
    String     InstanceKey;
    [ SMS_Report (FALSE) ]
    UInt32     AUOptions;
    [ SMS_Report (FALSE) ]
    UInt32     NoAutoUpdate;
    [ SMS_Report (TRUE) ]
    UInt32     UseWUServer;
};

